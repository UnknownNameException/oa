<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mmt.oa.dao.RoleMapper">
	<resultMap id="BaseResultMap" type="com.mmt.oa.dao.model.Role">
		<id column="role_id" property="roleId" jdbcType="INTEGER" />
		<result column="role_name" property="roleName" jdbcType="VARCHAR" />
		<result column="is_valid" property="isValid" jdbcType="BIT" />
		<result column="create_by" property="createBy" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="modified_by" property="modifiedBy" jdbcType="VARCHAR" />
		<result column="modified_time" property="modifiedTime"
			jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		role_id, role_name, is_valid, create_by, create_time,
		modified_by,
		modified_time
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from role
		where role_id = #{roleId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from role
		where role_id = #{roleId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.mmt.oa.dao.model.Role">
		insert into role (role_id,
		role_name, is_valid,
		create_by, create_time, modified_by,
		modified_time)
		values (#{roleId,jdbcType=INTEGER},
		#{roleName,jdbcType=VARCHAR},
		#{isValid,jdbcType=BIT},
		#{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
		#{modifiedBy,jdbcType=VARCHAR},
		#{modifiedTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.mmt.oa.dao.model.Role">
		insert into role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roleId != null">
				role_id,
			</if>
			<if test="roleName != null">
				role_name,
			</if>
			<if test="isValid != null">
				is_valid,
			</if>
			<if test="createBy != null">
				create_by,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="modifiedBy != null">
				modified_by,
			</if>
			<if test="modifiedTime != null">
				modified_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="roleId != null">
				#{roleId,jdbcType=INTEGER},
			</if>
			<if test="roleName != null">
				#{roleName,jdbcType=VARCHAR},
			</if>
			<if test="isValid != null">
				#{isValid,jdbcType=BIT},
			</if>
			<if test="createBy != null">
				#{createBy,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifiedBy != null">
				#{modifiedBy,jdbcType=VARCHAR},
			</if>
			<if test="modifiedTime != null">
				#{modifiedTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.mmt.oa.dao.model.Role">
		update role
		<set>
			<if test="roleName != null">
				role_name = #{roleName,jdbcType=VARCHAR},
			</if>
			<if test="isValid != null">
				is_valid = #{isValid,jdbcType=BIT},
			</if>
			<if test="createBy != null">
				create_by = #{createBy,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifiedBy != null">
				modified_by = #{modifiedBy,jdbcType=VARCHAR},
			</if>
			<if test="modifiedTime != null">
				modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where role_id = #{roleId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.mmt.oa.dao.model.Role">
		update role
		set
		role_name = #{roleName,jdbcType=VARCHAR},
		is_valid =
		#{isValid,jdbcType=BIT},
		create_by = #{createBy,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		modified_by =
		#{modifiedBy,jdbcType=VARCHAR},
		modified_time =
		#{modifiedTime,jdbcType=TIMESTAMP}
		where role_id =
		#{roleId,jdbcType=INTEGER}
	</update>

	<insert id="addNewRole" parameterType="com.mmt.oa.dao.model.Role">
		insert into role
		(role_name, is_valid,
		create_by, create_time, modified_by,
		modified_time)
		values (#{roleName,jdbcType=VARCHAR},
		#{isValid,jdbcType=BIT},
		#{createBy,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP},
		#{modifiedBy,jdbcType=VARCHAR},
		#{modifiedTime,jdbcType=TIMESTAMP})
	</insert>

	<select id="queryRoleInfo" resultMap="BaseResultMap"
		parameterType="com.mmt.oa.dao.model.Role">
		select
		<include refid="Base_Column_List" />
		from role
		<trim prefix="where" prefixOverrides="or |and ">
			<if test="roleId != null">
				and role_id = #{roleId,jdbcType=INTEGER}
			</if>
			<if test="roleName != null">
				and role_name like
				CONCAT('%',#{roleName,jdbcType=VARCHAR},'%')
			</if>
			<if test="isValid != null">
				and is_valid = #{isValid,jdbcType=BIT}
			</if>
		</trim>
	</select>

	<update id="modifyRoleInfo" parameterType="com.mmt.oa.dao.model.Role">
		update role
		<set>
			<if test="roleName != null">
				role_name = #{roleName,jdbcType=VARCHAR},
			</if>
			<if test="isValid != null">
				is_valid = #{isValid,jdbcType=BIT},
			</if>
			<if test="modifiedBy != null">
				modified_by = #{modifiedBy,jdbcType=VARCHAR},
			</if>
		</set>
		where role_id = #{roleId,jdbcType=INTEGER}
	</update>

	<update id="deleteRoleInfo" parameterType="com.mmt.oa.dao.model.Role">
		update role
		<set>
			<if test="isValid != null">
				is_valid = #{isValid,jdbcType=BIT},
			</if>
			<if test="modifiedBy != null">
				modified_by = #{modifiedBy,jdbcType=VARCHAR},
			</if>
		</set>
		where role_id = #{roleId,jdbcType=INTEGER}
	</update>









</mapper>